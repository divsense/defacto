{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8a13a1bd72405fc9375e","webpack:///./src/index.js","webpack:///./src/choice.js","webpack:///./src/keynode.js","webpack:///./src/parse.js","webpack:///./src/template.js","webpack:///./src/style.js"],"names":["nodeId","divsenseTree","choices","_kot","nodeText","keynodes","parsing","templateId","template","styles","node"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;AC7DA;AAAA;;;;;;;;;;AAUA;AACA;AACA;AACA;;;;;;;;;ACbA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,yDAAe,UAASA,MAAT,EAAiBC,YAAjB,EAA+BC,OAA/B,EAAuC;AACpD,SAAO,oDAAAC,CAAK,SAAL,CAAP;AACD,C;;;;;;;;AC7BD;;AAGA;;;;;;;;;;;;;;;;;;;;;AAqBA,yDAAe,UAASC,QAAT,EAAmBC,QAAnB,EAA4B;AACzC,SAAO,oDAAAF,CAAK,SAAL,CAAP;AACD,C;;;;;;;;AC1BD;;AAGA;;;;;;;;;;;;;;;;;;;;;;AAsBA,yDAAe,UAASG,OAAT,EAAkBL,YAAlB,EAA+B;AAC5C,SAAO,oDAAAE,CAAK,SAAL,CAAP;AACD,C;;;;;;;;AC3BD;;AAGA;;;;;;;;;;;;;;;;;;;;;AAqBA,yDAAe,UAASI,UAAT,EAAqBC,QAArB,EAA8B;AAC3C,SAAO,oDAAAL,CAAK,WAAL,CAAP;AACD,C;;;;;;;;AC1BD;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,yDAAe,UAASM,MAAT,EAAiBR,YAAjB,EAA+BS,IAA/B,EAAoC;AACjD,SAAO,oDAAAP,CAAK,OAAL,CAAP;AACD,C","file":"defacto.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"defacto\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"defacto\"] = factory();\n\telse\n\t\troot[\"defacto\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8a13a1bd72405fc9375e","/**\n * \n * Refer to this for different es6 export/import options: \n * http://stackoverflow.com/questions/25494365/es6-javascript-module-export-options\n * \n * Refer to this for how the exporting functionality works:\n *  http://stackoverflow.com/questions/29722270/import-modules-from-files-in-directory\n * \n */\n\nexport {default as choice} from   './choice';\nexport {default as keynode} from  './keynode';\nexport {default as parse} from    './parse';\nexport {default as template} from './template';\nexport {default as style} from    './style';\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import _kot from 'internal/_kot';\n\n\n/**\n * Given a section 'choices' in the language definition and a node,\n * return the available choices\n *\n * @func\n * @memberOf defacto\n * @since v0.1.0\n * @category Function\n * @sig uid -> DivsenseTree -> Array\n * @param {uid} nodeId The current node id\n * @param {JSON} divsenseTree This actor's divsense tree content\n *        (@TODO should it just be current, parent and siblings ?)\n * @param {JSON} choices The choices representation\n * @return {Array} Matching Array\n * @see parsing\n * @example\n *\n *      let node-id = \"123\"\n *      let divsense-tree = {...}\n *      let choices = {...}\n *      choices(node-id, divsense-tree, choices)\n *      //returns [...]\n *\n */\nexport default function(nodeId, divsenseTree, choices){\n  return _kot('choices');\n}            \n\n\n\n// WEBPACK FOOTER //\n// ./src/choice.js","import _kot from 'internal/_kot';\n\n\n/**\n (Example: ramda/src/internal/_clone)\n\n * Keynode specifications\n *\n * @func\n * @memberOf defacto\n * @since v0.1.0\n * @category Function\n * @sig String -> String -> String\n * @param {String} node The node text\n * @param {JSON} keynodes The keynodes representation\n * @return {*} Matching node\n * @see parsing\n * @example\n *\n *      let node-text = \"if\"\n *      keynode(node-text, keynodes)\n *      //returns true\n *\n */\nexport default function(nodeText, keynodes){\n  return _kot('parsing');\n}        \n\n\n\n// WEBPACK FOOTER //\n// ./src/keynode.js","import _kot from 'internal/_kot';\n\n\n/**\n * (Example: examples/parsing.js)\n * \n * This function is curried. In other words you can pass only parsing\n *  and then apply it to any other divsenseTree you desire.\n * @TODO finish this\n * \n *\n * @func\n * @memberOf defacto\n * @since v0.1.0\n * @category Function\n * @sig a -> b -> *\n * @param {Object} parsing The parsing language definition\n * @param {Object} divsenseTree The divsense tree to be parsed.\n * @return {String} The same tree in a completely different type format,\n *         as String, which is based on 'parsing'.\n * @see choices\n * @example\n *   import parse from parse.js\n *   parse(a,b)\n */\nexport default function(parsing, divsenseTree){\n  return _kot('parsing');\n}      \n\n\n\n// WEBPACK FOOTER //\n// ./src/parse.js","import _kot from 'internal/_kot';\n\n\n/**\n * Given a section 'choices' in the language definition and a node,\n * return the available choices\n *\n * @func\n * @memberOf defacto\n * @since v0.1.0\n * @category Function\n * @sig templateID -> JSON -> Array\n * @param {uid} templateId The current template id\n * @param {JSON} template This template to be converted to Divsense Tree\n * @return {JSON} Template as Divsense Tree JSON\n * @see parsing\n * @example\n *\n *      let templateId = \"123\"\n *      let template = {...}\n *      template(templateId, template)\n *      //returns {...}\n *\n */\nexport default function(templateId, template){\n  return _kot('templates');\n}            \n\n\n\n// WEBPACK FOOTER //\n// ./src/template.js","import _kot from 'internal/_kot';\n\n/**\n  * \n  * Given a section 'styles' in the language definition, a divsenseTree,  and a node,\n  *  return the right properties to be added to the node.\n  * This function is curried.\n  * @TODO finish this\n  *\n  * @func\n  * @memberOf defacto\n  * @since v0.1.0\n  * @category Function\n  * @sig styles -> divsenseTree -> node -> *\n  * @param {JSON} styles The styles in the language definition.\n  * @param {JSON} divsenseTree The divsense tree to be parsed.\n  * @param {uid} node The current node.\n  * @return {*} The same tree in a completely different type format,\n  *         which is based on 'parsing'.\n  * @see choices\n  * @example\n  *\n  *      parse(\n  */\nexport default function(styles, divsenseTree, node){\n  return _kot('style');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/style.js"],"sourceRoot":""}